class Sys::Process {
  
  use Sys::Process::Constant;
  
  native static method alarm : int ($seconds : int);
  native static method fork : int ();
  native static method getpriority : int ($which : int, $who : int);
  native static method setpriority : int ($which : int, $who : int, $prio : int);
  native static method sleep : int ($seconds : int);
  native static method kill : int ($pid : int, $sig : int);
  native static method wait : int ($wstatus : int*);
  native static method waitpid : int ($pid : int, $wstatus : int*, $options : int);
  native static method system : int ($command : string);
  native static method exit : int ($status : int);
  
  # native static method pipe : int ($spipefd : int[], $flags = 0 : int);

=pod

Functions for processes and process groups

getpgrp, getppid, setpgrp, exec, times, *alarm, *fork, *getpriority, *setpriority, *sleep, *kill, *wait, *waitpid, *system

TODO

pipe is implemented Sys::Pipe.

CAP_NET_ADMIN
CAP_NET_BIND_SERVICE

=cut

}

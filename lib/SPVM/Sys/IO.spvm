class Sys::IO {

  use Sys::Stat;
  use Sys::FileHandle;
  use Sys::DirHandle;
  use Sys::Ent::Dir;
  use Sys::Fcntl;
  
  native static method rmdir : void ($dir : string);
  native static method unlink : void ($file : string);
  native static method close : void ($fd : int);
  native static method fclose : void ($stream : Sys::FileHandle);
  native static method clearerr : void ($stream : Sys::FileHandle);
  native static method feof : int ($stream : Sys::FileHandle);
  native static method ferror : int ($stream : Sys::FileHandle);
  native static method fileno : int ($stream : Sys::FileHandle);
  native static method open : int ($path : string, $flags : int, $mode = 0 : int);
  native static method fopen : Sys::FileHandle ($path : string, $mode : string);
  native static method fdopen : Sys::FileHandle ($fd : int, $mode : string);
  native static method freopen : Sys::FileHandle ($path : string, $mode : string, $stream : Sys::FileHandle);
  native static method fread : int ($buffer : mutable string, $size : int, $data_length : int, $stream : Sys::FileHandle);
  native static method fwrite : int ($buffer : mutable string, $size : int, $data_length : int, $stream : Sys::FileHandle);
  native static method read : int ($fd : int, $buffer : mutable string, $count : int);
  native static method write : int ($fd : int, $buffer : mutable string, $count : int);
  native static method getc : int ($stream : Sys::FileHandle);
  native static method EOF : int ();
  native static method chdir : void ($path : string);
  native static method chmod : void ($path : string, $mode :int);
  native static method chown : void ($path : string, $owner : int, $group : int);
  native static method mkdir : void ($path : string, $mode : int);
  native static method fseek : void ($stream : Sys::FileHandle, $offset : long, $whence : int);
  native static method ftell : long ($stream : Sys::FileHandle);
  native static method opendir : Sys::DirHandle ($dir : string);
  native static method closedir : void ($dh : Sys::DirHandle);
  native static method readdir : Sys::Ent::Dir ($dh : Sys::DirHandle);
  native static method rewinddir : void ($dh : Sys::DirHandle);
  native static method telldir : long ($dh : Sys::DirHandle);
  native static method seekdir : void ($dh : Sys::DirHandle, $offset : long);
  native static method truncate : long ($path : string, $offset : long);
  native static method lseek : long ($fd : int, $offset : long, $whence : int);
  native static method umask : int ($mode : int);
  native static method rename : int ($old_path : string, $new_path : string);
  native static method readlink : int ($path : string, $buffer : mutable string);

  # native static method fcntl : long ($fd : int, $command : int, $arg = undef : object of Int|Long|byte[]);
  # int fcntl(int fd, int cmd, ... /* arg */ );

=pod

Input and output functions

*write, *sysread, *syswrite, *read, *getc, *seek, *tell, *close, *closedir, *readdir, *rewinddir, *telldir, *truncate, *seekdir, *fileno, *sysseek

fcntl, ioctl, symlink, utime, *unlink, *open, *chdir, *chmod, *chown, *sysopen, *rmdir, *mkdir, *opendir, *umask, *stat(Sys::Stat), *lstat(Sys::Stat), *rename, *readlink

TODO

poll is sokect feature on Windows

glob is too difficut. File::Glob porting is needed.

flock is not portable on Mac and Windows

chroot is deprecated.

I don't know these are needed yet.

binmode, dbmclose, format

Don't need

warn, say, readline, printf, print, eof, dbmopen, syscall, link, select

=cut

}

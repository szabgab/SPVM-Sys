class Sys::Net {
  use Sys::Ent::Hostent;
  use Sys::Ent::Netent;
  use Sys::Ent::Servent;
  use Sys::Ent::Protoent;

  native static method sethostent : void ($stayopen : int);
  native static method endhostent : void ();
  native static method gethostent : Sys::Ent::Hostent ();

  native static method setnetent : void ($stayopen : int);
  native static method endnetent : void ();
  native static method getnetent : Sys::Ent::Netent ();

  native static method setservent : void ($stayopen : int);
  native static method endservent : void ();
  native static method getservent : Sys::Ent::Servent ();

  native static method setprotoent : void ($stayopen : int);
  native static method endprotoent : void ();
  native static method getprotoent : Sys::Ent::Protoent ();

=pod
  native static method gethostbyname : Sys::Ent::Netent ($name : string);
struct hostent *gethostbyaddr(const void *addr,
                              socklen_t len, int type);

struct hostent *gethostbyname(const char *name);

#include <sys/socket.h>       /* AF_INET を使う場合 */
# struct hostent *gethostbyaddr(const void *addr,
#                               socklen_t len, int type);

=cut
                          
=pod

Fetching network info

gethostbyaddr, gethostbyname, getnetbyaddr, getnetbyname, getprotobyname, getprotobynumber, , getservbyname, getservbyport

*setnetent, *endnetent, *getnetent,

*sethostent, *endhostent, *gethostent

*setprotoent, *endprotoent, *getprotoent

*setservent, *endservent, *getservent

=cut

}

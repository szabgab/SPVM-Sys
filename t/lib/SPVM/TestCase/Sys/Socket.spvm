class TestCase::Sys::Socket {
  use Sys::Socket;
  use Sys::Socket::Constant as Socket;
  use Sys::Socket::Sockaddr;
  use Sys::Socket::Sockaddr::In;
  use Sys::Socket::Sockaddr::In6;
  
  static method socket : int () {
    
    # IPv4/TCP
    {
      my $socket= Sys::Socket->socket(Socket->AF_INET, Socket->SOCK_STREAM, 0);
      
      unless ($socket> 0) {
        return 0;
      }
    }
    
    # IPv4/UDP
    {
      my $socket= Sys::Socket->socket(Socket->AF_INET, Socket->SOCK_DGRAM, 0);
      
      unless ($socket> 0) {
        return 0;
      }
    }
    
    # IPv6/TCP
    {
      my $socket= Sys::Socket->socket(Socket->AF_INET6, Socket->SOCK_STREAM, 0);
      
      unless ($socket> 0) {
        return 0;
      }
    }
    
    # IPv6/UDP
    {
      my $socket= Sys::Socket->socket(Socket->AF_INET6, Socket->SOCK_DGRAM, 0);
      
      unless ($socket> 0) {
        return 0;
      }
    }
    
    return 1;
  }

  static method sockaddr : int ($port : int) {
    
    # IPv4
    {
      my $address = Sys::Socket::Sockaddr::In->new;
      
      $address->set_sin_family((byte)Socket->AF_INET);
      $address->set_sin_port(Sys::Socket->htons((short)$port));
      Sys::Socket->inet_pton(Socket->AF_INET, "127.0.0.1", $address->sin_addr);
    }

    # IPv6
    {
      my $address = Sys::Socket::Sockaddr::In6->new;
      
      $address->set_sin6_family((byte)Socket->AF_INET6);
      $address->set_sin6_port(Sys::Socket->htons((short)$port));
      Sys::Socket->inet_pton(Socket->AF_INET6, "::1", $address->sin6_addr);
    }
    
    return 1;
  }

  static method connect : int ($port : int) {
    # Socket
    my $socket= Sys::Socket->socket(Socket->AF_INET, Socket->SOCK_STREAM, 0);
    
    unless ($socket> 0) {
      return 0;
    }
    
    # IPv4 address
    my $address = Sys::Socket::Sockaddr::In->new;
    $address->set_sin_family((byte)Socket->AF_INET);
    $address->set_sin_port(Sys::Socket->htons((short)$port));
    Sys::Socket->inet_pton(Socket->AF_INET, "127.0.0.1", $address->sin_addr);
    
    my $status_connect = Sys::Socket->connect($socket, $address, $address->sizeof);
    
    unless ($status_connect == 0) {
      return 0;
    }
    
    my $status_close = Sys::Socket->close($socket);
    
    unless ($status_close == 0) {
      return 0;
    }
    
    return 1;
  }

  static method close : int ($port : int) {
    # Socket
    my $socket= Sys::Socket->socket(Socket->AF_INET, Socket->SOCK_STREAM, 0);
    
    unless ($socket> 0) {
      return 0;
    }
    
    # IPv4 address
    my $address = Sys::Socket::Sockaddr::In->new;
    $address->set_sin_family((byte)Socket->AF_INET);
    $address->set_sin_port(Sys::Socket->htons((short)$port));
    Sys::Socket->inet_pton(Socket->AF_INET, "127.0.0.1", $address->sin_addr);
    
    my $status_connect = Sys::Socket->connect($socket, $address, $address->sizeof);
    
    unless ($status_connect == 0) {
      return 0;
    }
    
    my $status_close = Sys::Socket->close($socket);
    
    unless ($status_close == 0) {
      return 0;
    }
    
    return 1;
  }
}
